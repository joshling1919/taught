exit
params.require(:search).permit(:query)[:query].downcase
params.require(:search).permit(:query)[:query]
params.require(:search).permit(:query)
params
continue
grade_int
subj
exit
Lesson.where(subject: "English", grade: 6)
params[:filter][:subject]
Lesson.where(subject: params[:filter][:sububject], grade: 6)
Lesson.where(subject: params[:filter][:subject],
ubject:params[:filter][:subject], grade: 6)
Lesson.find(subject:params[:filter][:subject], grade: 6)
params[:filter][:grade][0].to_i
params[:filter][:grade][0]
params[:filter][:grade]
params[:filter]
exit
params[:filter][:subject]
params[:filter]
continue
exit
params
continue
filterArr
params
exit
params
exit
params
exit
params
continue
exit
params
continue
exit
params
continue
exit
params
continue
params
continue
params
continue
params[:subject].present?
params
continue
exit
params[:Math]
params[:math]
params
continue
exit
params
exit
params[:lesson][:deleted_key_points]
params[:lesson][:deleted_objectives]
exit
params[:lesson][:deletedObjectives]
params[:lesson]
exit
section.cfus
section
exit
Lesson.find(params[:id]).sections
Lesson.find(params[:id])
params[:lesson][:sections_attributes]
section_data
Section.find(section_data.id)
section
cfu_data
exit
section[1][:cfus][1]
section[1][:cfus]
section[1][cfus]
section[1]
section[0]
section
exit
params[:lesson][:sections_attributes]
params[:sections_attributes]
params
continue
@cfu.section.lesson_id
@cfu.section
continue
Section.find(params[:id])
Section.find(params[:id]
params[:id]
aprams[:id]
params
continue
@objective[:lesson_id]
exit
misconception[1][:misconception]
misconception[1]
misconception
continue
cfu_arr[:question]
cfu_arr
exit
objective[1][:description]
objective[1].description
objective[1]
objective
continue
cfu[1][0]
cfu[1]
Cfu.new(section_id: new_section.id, question: cfu_arr[0],answer: cfu_arr[1])
Cfu.new(section_id: new_section.id, question: cfu_arr[0],answer: cfu_arr[1]).valid?
cfu[1]
cfu
exit
section_object[:cfus]
section_object[:misconceptions]
section
params[:lesson][:sections][0]
section_object[:cfus]
section_object
exit
params[:lesson][:sections][0][:cfus]
params[:lesson][:sections][:cfus]
params[:lesson][:sections]
params
exit
@lesson.errors.full_messages
new_section.errors.full_messages
new_section.valid?
c
section[1][:name]
section[1][name]
section[1].name
section[1]
section
exit
params[:lesson][:sections][0]
params[:lesson][:sections]
params
section
c
n
@lesson.id
exit
@lesson
@lesson.id
n
continue
params[:lesson][:objectives]
params.objectives
params["objectives"]
params
params[:objectives]
objectives
lesson_params[:objectives]
exit
lesson_params[:objectives]
exit
Objective.all
lesson_params[:objectives]
lesson_params[:title]
lesson_params[title]
lesson_params.title
lesson_params[objectives]
lesson_params
continue
Lesson.new(lesson_params).valid?
Lesson.new(lesson_params)
lesson_params
continue
lesson_params
}lesson_params
continue
User.find(1).lessons
User.all
continue
Lesson.find(7)
params
c
n
params
exit
lesson_params
exit
EXIT
ENV['CLOUD_NAME']
ENV
exit
ENV['CLOUD_NAME']
ENV[
ENV
exit
@lesson
c
params
exit
lesson_params
exit
c
exit
params[:user]
params
